name: N-tier

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'client/**'
      - 'main.py'
      - 'pyproject.toml'
      - 'Dockerfile.*'
      - 'kubernetes/**'
      - 'helm/**'
      - 'argocd-application.yaml'
      - '.github/workflows/main.yaml'

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest

    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.13"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync

      - name: Extract Commit Short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

  docker:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USRNAME }}
          password: ${{ secrets.DOCKERHUB_PSWD }}

      - name: Build & Push Docker Images
        run: |
          SHA=${{ needs.setup.outputs.sha_short }}
          docker build --file Dockerfile.server --tag ${{ secrets.DOCKERHUB_USRNAME }}/fastapi-server:${SHA} .
          docker build --file Dockerfile.client --tag ${{ secrets.DOCKERHUB_USRNAME }}/streamlit-client:${SHA} .
          docker push ${{ secrets.DOCKERHUB_USRNAME }}/fastapi-server:${SHA}
          docker push ${{ secrets.DOCKERHUB_USRNAME }}/streamlit-client:${SHA}

  helm:
    name: Update Helm Values
    runs-on: ubuntu-latest
    needs: [docker, setup]

    steps:
      - uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 
          sudo chmod +x /usr/local/bin/yq

      - name: Update values.yaml
        run: |
          SHA=${{ needs.setup.outputs.sha_short }}
          USERNAME=${{ secrets.DOCKERHUB_USRNAME }}
          echo "Injecting SHA: $SHA"

          yq eval -i ".api.image = \"${USERNAME}/fastapi-server:${SHA}\"" helm/values.yaml
          yq eval -i ".client.image = \"${USERNAME}/streamlit-client:${SHA}\"" helm/values.yaml

      - name: Upload updated values.yaml
        uses: actions/upload-artifact@v4
        with:
          name: updated-values
          path: helm/values.yaml


  commit:
    name: Commit Helm Changes
    runs-on: ubuntu-latest
    needs: [helm, setup]

    steps:
      - uses: actions/checkout@v4

      - name: Download updated values.yaml
        uses: actions/download-artifact@v4
        with:
          name: updated-values
          path: helm

      - name: Commit & Push values.yaml
        run: |
          git config --global user.name "Mohammed-Khubaib"
          git config --global user.email "{EMAIL}"

          SHA="${{ needs.setup.outputs.sha_short }}"

          if ! git diff --quiet helm/values.yaml; then
            git add helm/values.yaml
            git commit -m "chore(helm): update image tag to ${SHA}"
            git push
          else
            echo "No changes in helm/values.yaml. Skipping commit."
          fi

